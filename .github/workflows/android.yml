name: Build and Release APK

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Publish Release APK
    runs-on: ubuntu-latest

    steps:
    # Step 1: 检出代码
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: 设置 JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # Step 3: 设置 Android SDK
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 31
        build-tools: 31.0.0

    # Step 4: 从 build.gradle 提取版本号
    - name: Extract Version Name and Code
      id: version
      run: |
        VERSION_NAME=$(grep -oP 'versionName\s+"\K[^"]+' app/build.gradle)
        VERSION_CODE=$(grep -oP 'versionCode\s+\K\d+' app/build.gradle)
        echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV
        echo "VERSION_CODE=${VERSION_CODE}" >> $GITHUB_ENV

    # Step 5: 构建 Release APK
    - name: Build Release APK
      run: |
        chmod +x ./gradlew
        ./gradlew assembleRelease

    # Step 6: 创建 GitHub Release
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ env.VERSION_NAME }}"
        release_name: "Release v${{ env.VERSION_NAME }}"
        draft: false
        prerelease: false

    # Step 7: 上传 APK 到 Release
    - name: Upload APK to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: "app-release-${{ env.VERSION_NAME }}.apk"
        asset_content_type: application/vnd.android.package-archive
